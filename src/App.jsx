import { useEffect, useState } from 'react'
import Dashboard from './pages/Dashboard.jsx'
import Trips from './pages/Trips.jsx'
import Map from './pages/Map.jsx'
import Social from './pages/Social.jsx'
import Login from './pages/Login.jsx'
import TabBar from './components/TabBar.jsx'
import Header from './components/Header.jsx'
// Import the registerSW helper generated by vite-plugin-pwa. This call
// registers the service worker and prompts the user when updates are
// available.
import { registerSW } from 'virtual:pwa-register'

/**
 * Root component controls authentication state, page routing via a simple
 * tab switcher and service worker registration for offline support.
 */
export default function App() {
  const [authenticated, setAuthenticated] = useState(false)
  const [tab, setTab] = useState('dashboard')

  // Register the service worker when the component mounts
  useEffect(() => {
    // registerSW returns a function to recheck for updates; we ignore it here
    registerSW({ immediate: true })
  }, [])

  // Callback triggered when the user initiates login
  const handleLogin = () => {
    // TODO: implement Tesla OAuth2 PKCE flow here. This placeholder simply
    // marks the user as authenticated.
    setAuthenticated(true)
  }

  if (!authenticated) {
    return <Login onLogin={handleLogin} />
  }

  let content
  switch (tab) {
    case 'dashboard':
      content = <Dashboard />
      break
    case 'trips':
      content = <Trips />
      break
    case 'map':
      content = <Map />
      break
    case 'social':
      content = <Social />
      break
    default:
      content = <Dashboard />
  }

  return (
    <div className="min-h-screen flex flex-col bg-gray-50">
      {/* Top header */}
      {/* <Header /> */}
       <Header />
      {/* Content area: leave space at bottom for TabBar */}
      <div className="flex-1 overflow-y-auto pb-24">{content}</div>
      {/* Bottom navigation */}
      <TabBar activeTab={tab} setActiveTab={setTab} />
    </div>
  )
}